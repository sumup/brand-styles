.btn {
  background-color: $color-p500;
  border-color: $color-p700;
  border-radius: $border-radius-m;
  border-style: solid;
  border-width: 1px;
  box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06);
  color: #fff;
  cursor: pointer;
  font-size: $font-size-m;
  font-weight: $font-weight-medium;
  height: auto;
  line-height: $line-height-l;
  overflow: hidden;
  padding: $spacing-xs $spacing-s;
  text-decoration: none;
  text-overflow: ellipsis;
  transition: color 0.2s cubic-bezier(0.4, 0, 0.2, 1),
    background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1),
    box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1),
    border-color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  white-space: nowrap;
  width: auto;

  &:active {
    background-color: $color-p700;
    border-color: $color-p900;
    box-shadow: inset 0 4px 8px 0 rgba(12, 15, 20, 0.3);
  }

  &:focus {
    border-color: $color-p700;
    border-width: 1px;
    box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06),
      inset 0 0 0 2px $color-p700;
    outline: 0;
  }

  &:hover {
    background-color: $color-p700;
    color: #fff;
  }

  &:hover,
  &:active {
    border-color: $color-p900;
  }

  &[disabled],
  &.btn--disabled {
    cursor: default;
    opacity: 0.4;
    pointer-events: none;
  }

  &--loading {
    padding-right: #{18px + $spacing-s + $spacing-xs} !important;
    position: relative;
    transition: padding 0.2s ease-in-out;

    .spinner {
      display: inline-block;
      margin-left: $spacing-xs;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }
  }

  /**
   * Newly introduced button for cases where we need a grey button, because
   * a secondary button won't work.
   */
  &#{&}--basic {
    background-color: $color-n100;
    border-color: $color-n300;
    color: $color-n700;

    &:active {
      background-color: $color-n300;
      border-color: $color-n500;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06);
    }

    &:hover {
      background-color: $color-n300;
      border-color: $color-n500;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06);
    }

    &:focus,
    &:active {
      background-color: $color-n300;
      border-color: $color-n500;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06),
        inset 0 0 0 2px $color-n500;
    }
  }

  &#{&}--alert {
    background-color: $color-error;
    border-color: $color-error;
    color: white;

    &:hover,
    &:active,
    &:focus {
      background-color: $color-r500;
      border-color: $color-r700;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06),
        inset 0 0 0 2px $color-r700;
    }
  }

  // TODO: remove the highlight modifier as we're
  //       going to stick with cta as terminology.
  &#{&}--cta,
  &#{&}--highlight {
  }

  // TODO: remove the outline modifier as we're
  //       going to stick with secondary as terminology.
  &#{&}--secondary,
  &#{&}--outline {
    background-color: transparent;
    border-color: transparent;
    color: $color-n700;

    &:hover {
      border-color: transparent;
      color: $color-n900;
    }

    &:active,
    &:focus {
      border-color: $color-n900;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06),
        inset 0 0 0 2px $color-n900;
      color: $color-n900;

      &[disabled],
      &.btn--disabled {
        @include disabled;
      }
    }
  }

  // TODO: remove the outline-dark modifier as we're going
  //       to strick with secondary as terminology.
  &#{&}--secondary-dark,
  &#{&}--outline-dark {
    background-color: transparent;
    border: 1px solid $color-dark;
    color: $color-dark;

    &:hover {
      background-color: $color-dark;
      color: white;
    }
  }

  &#{&}--secondary-white,
  &#{&}--outline-white {
    background-color: transparent;
    border: 1px solid #fff;
    color: #fff;

    &:hover {
      background-color: #fff;
      color: $color-error;
    }
  }

  // TODO: clarify if this will stay. Currently it's
  //       only used by the transaction filters on
  //       mobile.
  &#{&}--grey {
    background-color: transparent;
    border-color: transparent;
    color: $color-n700;

    &:hover {
      border-color: transparent;
      color: $color-n900;
    }

    &:active,
    &:focus {
      border-color: $color-n900;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06),
        inset 0 0 0 2px $color-n900;
      color: $color-n900;

      &[disabled],
      &.btn--disabled {
        @include disabled;
      }
    }
  }

  &#{&}--warning {
    background-color: darken($color-warning, 5%);
    border-color: darken($color-warning, 5%);
    color: white;

    &:hover,
    &:active,
    &:focus {
      background-color: $color-y500;
      border-color: $color-y700;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06),
        inset 0 0 0 2px $color-y700;
    }
  }

  &#{&}--alert {
    background-color: $color-error;
    border-color: $color-error;
    color: white;

    &:hover,
    &:active,
    &:focus {
      background-color: $color-r500;
      border-color: $color-r700;
      box-shadow: inset 0 1px 0 1px rgba(255, 255, 255, 0.06),
        inset 0 0 0 2px $color-r700;
    }
  }

  &#{&}--s {
    font-size: $font-size-m;
    line-height: $line-height-s;
    padding: $spacing-xs $spacing-m;

    &.btn--loading .spinner {
      right: 9px;
      top: 10px;
    }
  }
}

/* Text buttons */

.text-btn {
  background: none;
  background-color: transparent;
  border: 0;
  cursor: pointer;
  font-size: $font-size-m;
  font-weight: $font-weight-medium;
  line-height: $line-height-l;
  padding: 0;

  &[disabled],
  &#{&}--disabled {
    cursor: default;
    pointer-events: none;
  }

  &#{&}--highlight {
    color: $color-highlight;

    &[disabled],
    &.btn--disabled {
      color: lighten($color-highlight, 0.2);
    }
  }

  &#{&}--brand {
    color: $color-brand;

    &[disabled],
    &.btn--disabled {
      color: lighten($color-brand, 20%);
    }
  }

  &#{&}--dark {
    color: $color-dark;

    &[disabled],
    &.btn--disabled {
      color: lighten($color-dark, 20%);
    }
  }

  &:hover,
  &:active {
    background-color: transparent;
    border: none;
  }

  &:focus {
    box-shadow: none;
    outline: none;
  }
}

/**
 * Loading spinner
 * Apply .loading to parent button to enable spinner
 */

.spinner {
  @include size(18px);
  background: url('/images/spinner-bright.svg') no-repeat center center;
  display: none;
  position: absolute;
  transition: all 0.3s 0.2s ease-in-out;
}

.btns {
  &#{&}--inline {
    align-items: center;
    display: inline-flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100%;

    @include media($medium-screens) {
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: flex-start;
      width: auto;

      & > .btn {
        margin-top: $spacing-s;
        width: auto;
      }

      & > :not(:last-child) {
        margin-bottom: 0;
        margin-right: $spacing-s;
      }
    }

    & > .btn {
      width: 100%;
    }

    & > :not(:last-child) {
      margin-bottom: $spacing-xs;
    }

    &#{&}-text {
      justify-content: flex-start;
    }
  }

  &--connected {
    margin-bottom: $spacing-s;

    @include media($big-screens) {
      .btn {
        border-width: 1px 1px 1px 0;

        &:first-child {
          border-radius: $border-radius 0 0 $border-radius;
          border-width: 1px;
        }

        &:last-child {
          border-radius: 0 $border-radius $border-radius 0;
          border-width: 1px 1px 1px 0;
        }
      }
    }

    .btn {
      border-color: $color-brand;
      border-radius: 0;
      border-style: solid;
      border-width: 0 1px;
      box-shadow: none;

      // TODO: Rename the brand and outline-brand modifiers. Since this
      //       brand button style is only used here, maybe make the default
      //       style look like outline-brand and add a --selected modifier
      //       for the fill state?
      &--brand {
        background-color: $color-brand;
        color: white;
      }

      &--outline-brand {
        background-color: transparent;
        border: 1px solid $color-brand;
        color: $color-brand;

        &:hover {
          background-color: $color-brand;
          color: white;
        }
      }

      &[disabled] {
        opacity: 1;

        &:hover {
          background-color: $color-brand;
        }
      }

      &:first-child {
        border-radius: $border-radius $border-radius 0 0;
        border-width: 1px;
      }

      &:last-child {
        border-radius: 0 0 $border-radius $border-radius;
        border-width: 1px;
      }
    }

    .btn.btn--s {
      margin: 0;
      padding: 0.7em 1.4em;
    }
  }
}
