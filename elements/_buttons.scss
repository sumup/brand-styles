.btn {
  @include button-shadow;

  background: $gradient-blue;
  border: 0;
  border-radius: $border-radius;
  color: $color-white;
  cursor: pointer;
  display: inline-block;
  font-family: $font-family;
  font-size: $font-size-l;
  font-weight: $font-weight-bold;
  letter-spacing: $letter-spacing-m;
  line-height: $line-height-m;
  min-width: 120px;
  overflow: hidden;
  padding: $spacing-s $spacing-xl;
  position: relative;
  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;
  transition: all 0.1s ease-in;
  vertical-align: middle;
  white-space: nowrap;
  will-change: transform;

  [data-locale='es-CL'] & {
    @include button-shadow-cl;

    background: $gradient-orange;
  }

  &:hover,
  &:focus {
    @include button-shadow-raised;

    color: $color-white;
    outline: none;
    text-decoration: none;
    transform: translateY(3px);

    [data-locale='es-CL'] & {
      @include button-shadow-raised-cl;
    }
  }

  &:active {
    @include button-shadow-pressed;

    background: linear-gradient(
      to bottom,
      $color-brand-lighter,
      $color-brand-darker
    );
    transform: translateY(6px);
    transition: all 0.05s ease-in;

    [data-locale='es-CL'] & {
      @include button-shadow-pressed-cl;

      background: linear-gradient(
        to bottom,
        $color-chile-lighter,
        $color-chile-darker
      );
    }
  }

  &[disabled],
  &.btn--disabled {
    opacity: 0.4;
    pointer-events: none;
  }

  &#{&}--secondary {
    background: $gradient-white;
    color: $color-darker;

    &:active {
      background: linear-gradient(to bottom, $color-off, #f6f6f6);
    }
  }

  &#{&}--outline {
    background: transparent;
    box-shadow: none;
    color: $color-brand;
    position: relative;

    [data-locale='es-CL'] & {
      color: $color-chile;
    }

    &:hover,
    &:focus {
      background: rgba($color-brand, 0.1);

      [data-locale='es-CL'] & {
        background: rgba($color-chile, 0.1);
      }
    }

    &:active {
      transform: translateY(5px);
    }

    &::before {
      @include position(absolute, 0 0 0 0);

      border: 3px solid $color-brand;
      border-radius: $border-radius;
      content: '';
      display: block;

      [data-locale='es-CL'] & {
        border: 3px solid $color-chile;
      }
    }
  }

  &#{&}--outline#{&}--secondary {
    color: $color-white;

    &:hover,
    &:active,
    &:focus {
      background: rgba($color-white, 0.15);
    }

    &::before {
      border-color: $color-white;
    }
  }

  &--text {
    background: none !important;
    border: 0;
    box-shadow: none !important;
    color: $color-dark;
    cursor: pointer;
    font-size: $font-size-l;
    font-weight: 500;
    line-height: $line-height-s;
    padding: 0;

    &:active,
    &:hover,
    &:focus {
      background: none;
      box-shadow: none;
      color: $color-brand;
      outline: none;
      text-decoration: none;
      transform: none;
    }

    &[disabled],
    &.btn--disabled {
      color: lighten($color-dark, 0.2);
    }
  }

  &--loading {
    padding-right: $spacing-xxl !important;
    transition: padding 0.2s ease-in-out;

    .spinner {
      display: inline-block;
      margin-left: $spacing-xs;
    }
  }

  // TODO: Obsolete? ðŸ‘‡
  &#{&}--cta {
    background-color: $color-highlight;
    border-color: $color-highlight;
    color: $color-white;

    &:hover,
    &:active,
    &:focus {
      background-color: $color-highlight-darker;
      border-color: $color-highlight-darker;
    }
  }

  &#{&}--secondary-dark {
    background-color: transparent;
    border: 1px solid $color-dark;
    color: $color-dark;

    &:hover {
      background-color: $color-dark;
      color: $color-white;
    }
  }

  &#{&}--secondary-white {
    background-color: transparent;
    border: 1px solid #fff;
    color: #fff;

    &:hover {
      background-color: #fff;
      color: $color-error;
    }
  }

  // TODO: clarify if this will stay. Currently it's
  //       only used by the transaction filters on
  //       mobile.
  &#{&}--grey {
    background-color: $color-light;
    border-color: $color-light;
    color: $color-dark;

    &:hover,
    &:active,
    &:focus {
      background-color: darken($color-light, 5%);
      border-color: darken($color-light, 5%);
    }
  }

  &#{&}--warning {
    background-color: darken($color-warning, 5%);
    border-color: darken($color-warning, 5%);
    color: $color-white;

    &:hover,
    &:active,
    &:focus {
      background-color: darken($color-warning, 5%);
      border-color: darken($color-warning, 5%);
    }
  }

  &#{&}--alert {
    background-color: $color-error;
    border-color: $color-error;
    color: $color-white;

    &:hover,
    &:active,
    &:focus {
      background-color: $color-error;
      border-color: $color-error;
    }
  }

  &#{&}--s {
    font-size: $font-size-m;
    padding: $spacing-xs $spacing-m;

    &.btn--loading .spinner {
      right: 9px;
      top: 10px;
    }
  }
}

// NOTE: Deprecated
.text-btn {
  background: none;
  border: 0;
  cursor: pointer;
  font-size: $font-size-l;
  font-weight: 500;
  line-height: $line-height-s;
  padding: 0;

  &#{&}--highlight {
    color: $color-highlight;

    &[disabled],
    &.btn--disabled {
      color: lighten($color-highlight, 0.2);
    }
  }

  &#{&}--brand {
    color: $color-brand;

    &[disabled],
    &.btn--disabled {
      color: lighten($color-brand, 0.2);
    }
  }

  &#{&}--dark {
    color: $color-dark;

    &[disabled],
    &.btn--disabled {
      color: lighten($color-dark, 0.2);
    }
  }

  &:focus {
    outline: none;
  }
}

/**
 * Loading spinner
 * Apply .loading to parent button to enable spinner
 */
.spinner {
  @include size(18px);

  background: url('/images/spinner-bright.svg') no-repeat center center;
  display: none;
  position: absolute;
  transition: all 0.3s 0.2s ease-in-out;
}

.btns {
  &#{&}--inline {
    align-items: center;
    display: inline-flex;
    flex-direction: column;
    justify-content: space-around;
    width: 100%;

    > *:not(:last-child) {
      margin-bottom: $spacing-s;
    }

    &#{&}-text {
      justify-content: flex-start;
    }

    .align--left & {
      align-items: flex-start;
    }

    .align--right & {
      align-items: flex-end;
    }

    @include media(small) {
      flex-flow: row wrap;
      width: auto;

      > .btn {
        margin-top: $spacing-s;
      }

      > *:not(:last-child) {
        margin-bottom: 0;
        margin-right: $spacing-s;
      }
    }
  }

  &--connected {
    margin-bottom: $spacing-s;

    .btn {
      border-color: $color-brand;
      border-radius: 0;
      border-style: solid;
      border-width: 0 1px;

      // TODO: Rename the brand and outline-brand modifiers. Since this
      //       brand button style is only used here, maybe make the default
      //       style look like outline-brand and add a --selected modifier
      //       for the fill state?
      &--brand {
        background-color: $color-brand;
        color: $color-white;
      }

      &--outline-brand {
        background-color: transparent;
        border: 1px solid $color-brand;
        color: $color-brand;

        &:hover {
          background-color: $color-brand;
          color: $color-white;
        }
      }

      &[disabled] {
        opacity: 1;

        &:hover {
          background-color: $color-brand;
        }
      }

      &:first-child {
        border-radius: $border-radius $border-radius 0 0;
        border-width: 1px;
      }

      &:last-child {
        border-radius: 0 0 $border-radius $border-radius;
        border-width: 1px;
      }
    }

    .btn.btn--s {
      margin: 0;
      padding: 0.7em 1.4em;
    }

    @include media(medium) {
      .btn {
        border-width: 1px 1px 1px 0;

        &:first-child {
          border-radius: $border-radius 0 0 $border-radius;
          border-width: 1px;
        }

        &:last-child {
          border-radius: 0 $border-radius $border-radius 0;
          border-width: 1px 1px 1px 0;
        }
      }
    }
  }
}
