// Overwrite browser vendor styles
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

.fieldset {
  margin-top: $spacing-xl;
}

.label,
%label {
  font-size: $font-size-s;
  font-weight: $font-weight-regular;
  line-height: $line-height-s;
  margin-bottom: $spacing-xs;
}

.legend {
  @extend %label;

  &.legend--regular {
    font-weight: $font-weight-regular;
  }
}

.input {
  height: 42px;
}

.input,
.textarea {
  appearance: none;
  background: $color-light;
  border: 0;
  border-radius: $border-radius;
  font-size: $font-size-l;
  line-height: $line-height-s;
  margin-bottom: $spacing-l;
  padding: $spacing-s;
  transition: border-color 0.2s, background-color 0.3s;
  width: 100%;

  &::placeholder {
    text-transform: uppercase;
    color: #8B8B8B;
    font-family: $font-family;
    font-weight: $font-weight-medium;
    font-size: $font-size-m;
  }

  @include media(medium) {
    font-size: $font-size-m;
  }

  &:focus,
  &:hover {
    background-color: rgba($color-brand-lighter, 0.1);
    border-color: $color-brand;
    outline: none; // remove weird glow on some OS'es
  }

  &.input--outline {
    border: 1px solid white;
    color: white;
    background-color: transparent;

    &::placeholder {
      color: $color-light;
    }

    &:focus,
    &:hover {
      background: rgba($color-brand, 0.1);
      border-color: white;
    }
  }
}

.input.input--disabled,
.input[disabled],
.input[disabled='disabled'],
.input[readonly] {
  @include disabled;
}

.input.input--no-margin,
.textarea.textarea--no-margin {
  margin-bottom: 0;
}

.input.input--optional,
.textarea.textarea--optional {
  border-style: dashed;
}

.input {
  height: 42px;
}

.textarea {
  min-height: 120px;
}

// Goes on the container (e.g. a <ul>)
.inputs-inline {
  display: block;
  zoom: 1;

  &::after,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }

  > li {
    display: inline-block;
    float: left;
    padding: 0;
    width: calc(50% - #{$spacing-s});

    &:nth-of-type(odd) {
      margin-right: $spacing-m;
    }

    &:nth-of-type(even) {
      float: right;
    }
  }

  &.inputs-inline--first-bigger {
    li:first-child { width: 70%; }
    li:nth-child(2) { width: calc(30% - #{$spacing-m}); }

    .validation-list li { width: 100%; }
  }

  .btn,
  .button { width: 100%; }

  &.inputs-inline--block-mobile {
    > li {
      width: 100%;

      &:nth-child(even) {
        margin-bottom: $spacing-m;

        @include media(small) {
          margin-top: 0 !important;
        }
      }

      @include media(small) {
        width: 46%;
      }
    }
  }
}

.checkboxes-custom,
.radio-buttons-custom {
  label {
    @extend %label;

    cursor: pointer;
    display: inline-block;
    font-size: $font-size-m;
    font-weight: 300;
    margin-right: 15px;
    padding-left: 25px;
    padding-right: 15px;
    position: relative;

    &::after {
      background-color: $color-white;
      border: 1px solid $color-medium;
      content: '';
      display: inline-block;
      height: 16px;
      left: 0;
      margin-right: 10px;
      position: absolute;
      top: 0;
      width: 16px;
    }
  }

  /**
   * Visually hiding default inputs,
   * but keeping them tabbable
   */

  input[type='radio'],
  input[type='checkbox'] {
    border: 0;
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    padding: 0;
    position: absolute;
    visibility: hidden;
    width: auto;
  }

  input[type='radio'] + label::after {
    border-radius: 9px;
  }

  input[type='checkbox'] + label::after {
    border-radius: $border-radius;
  }

  input:checked + label::after {
    display: inline-block;
    height: 8px;
    position: absolute;
    width: 8px;
  }

  input[type='radio']:checked + label::after {
    background: $color-brand;
    border-radius: 4px;
    content: '';
    left: 5px;
    top: 5px;
  }

  input[type='checkbox']:checked + label::after {
    @include checkmark-pseudoelement;

    height: 12px;
    left: 3px;
    top: 4px;
    width: 12px;
  }

  &.checkboxes-custom--disabled,
  .radio-buttons-custom--disabled {
    label {
      color: $color-light;

      &::after { background: $color-light; }
    }
  }
}

.select-custom {
  position: relative;

  &::after {
    color: $color-dark;
    content: '\221F';
    display: inline-block;
    font-size: $font-size-xs;
    height: 0;
    position: absolute;
    right: $spacing-xxl;
    top: $spacing-s + 3px;
    transform: rotate(-45deg);
    transition: none;
    width: 0;
    z-index: 40;
  }

  &--disabled::after {
    content: '';
  }

  select {
    appearance: none;
    background: $color-light;
    border-radius: $border-radius;
    border: 0;
    cursor: pointer;
    font-size: $font-size-m;
    height: 42px;
    line-height: 18px;
    margin-bottom: $spacing-l;
    outline: none;
    padding: 12px;
    position: relative;
    white-space: nowrap;
    width: 100%;
    z-index: 30;

    &:focus,
    &:hover,
    &:active { border-color: $color-brand; }

    &[disabled],
    &[disabled='disabled'],
    &[readonly] {
      @include disabled;

      &::after {
        display: none;
      }
    }
  }
}

.validation-list {
  @include type-s;

  position: relative;

  li {
    color: $color-error;
    font-weight: $font-weight-regular;
    margin-bottom: $spacing-s;
    position: relative;
    transition: none;

    a,
    a:hover,
    a:active,
    a:visited {
      color: $color-error;
      text-decoration: underline;
    }

    &.ng-hide-remove {
      animation: fadeInDown 0.2s ease-in;
    }

    &.ng-hide-add-active {
      animation: fadeOutUp 0.2s ease-in;
      position: absolute;
      width: 100%;
    }

    &.warning {
      color: $color-warning-darker;
    }

    p { margin: 0; }
  }
}
